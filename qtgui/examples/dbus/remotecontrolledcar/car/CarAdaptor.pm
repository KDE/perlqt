#
# This file was generated by qdbusxml2cpp version 0.7
# Command line was: qdbusxml2cpp -a CarAdaptor.pm car.xml
#
# qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
#
# This is an auto-generated file.
# This file may have been hand-edited. Look for HAND-EDIT comments
# before re-generating it.
#

#
# Adaptor class for interface com.trolltech.Examples.CarInterface
#
package CarAdaptor;
use strict;
use warnings;
use QtCore4;
use QtDBus4;
use QtCore4::isa qw( Qt::DBusAbstractAdaptor );

use QtCore4::classinfo
    'D-Bus Interface' => 'com.trolltech.Examples.CarInterface',
    'D-Bus Introspection' => '' .
"  <interface name=\"com.trolltech.Examples.CarInterface\">\n" .
"    <method name=\"accelerate\"/>\n" .
"    <method name=\"decelerate\"/>\n" .
"    <method name=\"turnLeft\"/>\n" .
"    <method name=\"turnRight\"/>\n" .
"    <signal name=\"crashed\"/>\n" .
"  </interface>\n" .
    '';

use QtCore4::slots # METHODS
    'accelerate' => [],
    'decelerate' => [],
    'turnLeft' => [],
    'turnRight' => [];
use QtCore4::signals # SIGNALS
    'crashed' => [];

#
# Implementation of adaptor class CarInterfaceAdaptor
#

sub NEW
{
    # constructor
    my ( $class, $parent, $data ) = @_;
    $class->SUPER::NEW($parent);
    if ( defined $data ) {
        this->{data} = $data;
    } else {
        this->{data} = $parent;
    }
    this->setAutoRelaySignals(1);

    # HAND-EDIT
    this->startTimer(1000 / 33);
}

sub accelerate
{
    # handle method call com.trolltech.Examples.CarInterface.accelerate
    this->{data}->accelerate();
}

sub decelerate
{
    # handle method call com.trolltech.Examples.CarInterface.decelerate
    this->{data}->decelerate();
}

sub turnLeft
{
    # handle method call com.trolltech.Examples.CarInterface.turnLeft
    this->{data}->turnLeft();
}

sub turnRight
{
    # handle method call com.trolltech.Examples.CarInterface.turnRight
    this->{data}->turnRight();
}

# HAND-EDIT
sub timerEvent
{
    this->{data}->timerEvent(@_);
}

1;
